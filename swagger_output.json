{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module: To be, or not to be: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Todos",
      "description": "Endpoints that exposes to dos info"
    },
    {
      "name": "Posts",
      "description": "Endpoints that exposes posts"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/todos/something/{id}": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Endpoint to bring certain todo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "string",
            "description": "id of todo"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name of todo",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/Todos"
            }
          },
          "400": {
            "description": "Todo does not exist"
          }
        }
      }
    },
    "/todos/{user}": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Endpoint to bring last todo",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "params",
            "description": "ID of user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/Todos"
            }
          },
          "400": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/posts/": {
      "get": {
        "tags": [
          "Posts"
        ],
        "description": "Endpoint to bring last post",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "400": {
            "description": "There is not posts yet"
          }
        }
      }
    }
  },
  "definitions": {
    "Todos": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "delectus aut autem"
        },
        "completed": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Posts": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 2
        },
        "id": {
          "type": "number",
          "example": 2
        },
        "title": {
          "type": "string",
          "example": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit"
        },
        "body": {
          "type": "string",
          "example": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
        }
      }
    }
  }
}